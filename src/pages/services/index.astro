---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import TopLayout from "@layouts/TopLayout.astro";
import BottomLayout from "@layouts/BottomLayout.astro";
import SearchCollection from "@components/SearchCollection";
import { SERVICES } from "@consts";

const services = (await getCollection("services"))
  .filter((service) => !service.data.draft)
  .sort((a, b) => a.data.order - b.data.order);

const tags = [...new Set(services.flatMap((service) => service.data.tags))].sort(
  (a, b) => a.localeCompare(b),
);

// Define which service should be popular and centered based on title
const getIsPopular = (serviceTitle) => {
  return serviceTitle.toLowerCase().includes('laravel') && serviceTitle.toLowerCase().includes('react');
};

// Prepare service details for client-side
const serviceDetailsJSON = JSON.stringify(
  services.reduce((acc, service) => {
    acc[service.slug] = {
      title: service.data.title,
      icon: service.data.icon,
      price: service.data.price,
      summary: service.data.summary,
      description: service.data.description,
      features: service.data.features,
      tags: service.data.tags
    };
    return acc;
  }, {})
);

// Additional business systems data
const businessSystems = [
  {
    slug: 'crm-system',
    title: 'CRM System',
    icon: 'ðŸ“Š',
    price: '$15',
    summary: 'Customer Relationship Management for sales and support',
    description: 'Build a comprehensive CRM system to manage customer interactions, track sales pipelines, and improve customer relationships. Features include lead management, customer profiles, sales automation, and detailed analytics.',
    features: [
      'Lead and contact management',
      'Sales pipeline tracking',
      'Customer communication history',
      'Task and activity management',
      'Reporting and analytics dashboard',
      'Email integration',
      'Document storage',
      'Custom workflow automation'
    ],
    tags: ['CRM', 'Sales', 'Business', 'Automation']
  },
  {
    slug: 'hr-management',
    title: 'HR Management System',
    icon: 'ðŸ‘¥',
    price: '$15',
    summary: 'Complete HR solution for employee management',
    description: 'Develop a full-featured HR management system to streamline employee onboarding, payroll, performance reviews, and leave management. Centralize all HR operations in one platform.',
    features: [
      'Employee database and profiles',
      'Leave and attendance management',
      'Payroll system integration',
      'Performance review system',
      'Document management',
      'Recruitment and onboarding',
      'Training and development tracking',
      'Compliance management'
    ],
    tags: ['HR', 'Management', 'Employee', 'Business']
  },
  {
    slug: 'lms-platform',
    title: 'LMS Platform',
    icon: 'ðŸŽ“',
    price: '$15',
    summary: 'Learning Management System for education and training',
    description: 'Create a powerful Learning Management System for educational institutions and corporate training. Deliver courses, track progress, and manage certifications efficiently.',
    features: [
      'Course creation and management',
      'Student enrollment and progress tracking',
      'Quiz and assignment system',
      'Video and content delivery',
      'Certificate generation',
      'Discussion forums',
      'Grade book and reporting',
      'Mobile learning support'
    ],
    tags: ['LMS', 'Education', 'E-learning', 'Training']
  },
  {
    slug: 'employee-management',
    title: 'Employee Management System',
    icon: 'ðŸ’¼',
    price: '$15',
    summary: 'Streamlined employee workflow management',
    description: 'Build an employee management system that simplifies task assignment, time tracking, project management, and team collaboration for businesses of all sizes.',
    features: [
      'Task and project management',
      'Time tracking and timesheets',
      'Team collaboration tools',
      'Performance monitoring',
      'Document sharing',
      'Attendance tracking',
      'Goal setting and tracking',
      'Integration with other tools'
    ],
    tags: ['Employee', 'Management', 'Productivity', 'Business']
  }
];
---

<PageLayout title={SERVICES.TITLE} description={SERVICES.DESCRIPTION}>
  <TopLayout>
    <div class="animate">
      <div class="text-center max-w-4xl mx-auto">
        <h1 class="text-3xl font-bold text-black dark:text-white mt-2">
          {SERVICES.TITLE}
        </h1>
        <div class="mt-3 text-base text-gray-600 dark:text-gray-300">
          {SERVICES.DESCRIPTION}
        </div>
      </div>
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate">
      <!-- Web Development Services -->
      <section class="mb-16">
        <h2 class="text-2xl font-bold text-center mb-8 text-gray-900 dark:text-white">Web Development Services</h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
          {services.map((service, index) => {
            const isPopular = getIsPopular(service.data.title);
            return (
              <div class={`group relative bg-white dark:bg-gray-800 rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 border overflow-hidden ${
                isPopular ? 'lg:scale-105 lg:-translate-y-1 border-gray-300 dark:border-gray-400 lg:order-0' : 'border-gray-100 dark:border-gray-700'
              }`} style={isPopular ? 'order: ' : ''}>
                {isPopular && (
                  <div class="absolute top-0 left-1/2 transform -translate-x-1/2 bg-black text-white px-3 py-1 rounded-full text-xs font-semibold">
                    Most Popular
                  </div>
                )}
                
                <div class="p-6">
                  <!-- Header -->
                  <div class="text-center mb-4">
                    <div class="flex justify-center mb-3">
                      {service.data.icon && (
                        <div class="text-3xl p-2 mt-2 rounded-lg bg-black text-white">
                          {service.data.icon}
                        </div>
                      )}
                    </div>
                    <h3 class="text-sm font-bold text-gray-900 dark:text-white mb-1">
                      {service.data.title}
                    </h3>
                    <p class="text-sm text-gray-600 dark:text-gray-300 leading-relaxed">
                      {service.data.summary}
                    </p>
                  </div>

                  <!-- Price -->
                  {service.data.price && (
                    <div class="text-center mb-4">
                      <div class="text-gray-900 dark:text-white">
                        <span class="text-2xl font-bold"> {service.data.price}</span> <span className="text-base font-small">/hour</span>
                      </div>
                      <div class="text-xs text-gray-500 dark:text-gray-400">
                        Starting from
                      </div>
                    </div>
                  )}

                  <!-- Features -->
                  <ul class="space-y-2 mb-4">
                    {service.data.features.slice(0, 5).map((feature) => (
                      <li class="flex items-start gap-2 text-xs text-gray-600 dark:text-gray-300">
                        <svg class="w-3 h-3 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                        </svg>
                        <span class="leading-tight">{feature}</span>
                      </li>
                    ))}
                    {service.data.features.length > 5 && (
                      <li class="text-xs text-blue-600 dark:text-blue-400 font-medium">
                        + {service.data.features.length - 5} more features
                      </li>
                    )}
                  </ul>

                  <!-- CTA Button -->
                  <button 
                    onclick={`showServiceDetails('${service.slug}')`}
                    class={`w-full text-center py-2 px-3 rounded-lg font-medium transition-all duration-300 text-sm ${
                      isPopular 
                        ? "bg-black hover:bg-gray-800 text-white shadow-md"
                        : "bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white"
                    }`}
                  >
                    View Details
                  </button>
                </div>
              </div>
            );
          })}
        </div>
      </section>

      <!-- Business Management Systems -->
      <section class="mb-16">
        <h2 class="text-2xl font-bold text-center mb-8 text-gray-900 dark:text-white">Business Management Systems</h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {businessSystems.map((system, index) => (
            <div class="group relative bg-white dark:bg-gray-800 rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 border border-gray-100 dark:border-gray-700 overflow-hidden">
              <div class="p-6 text-center">
                <div class="flex justify-center mb-4">
                  <div class="text-3xl p-2 rounded-lg bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400">
                    {system.icon}
                  </div>
                </div>
                <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-2">
                  {system.title}
                </h3>
                <p class="text-sm text-gray-600 dark:text-gray-300 mb-4 leading-relaxed">
                  {system.summary}
                </p>

                <!-- Price -->
                <div class="text-center mb-4">
                  <div class="text-gray-900 dark:text-white">
                    <span class="text-xl font-bold">{system.price}</span> <span class="text-sm">/hour</span>
                  </div>
                  <div class="text-xs text-gray-500 dark:text-gray-400">
                    Starting from
                  </div>
                </div>

                <!-- Features -->
                <ul class="space-y-2 mb-4">
                  {system.features.slice(0, 4).map((feature) => (
                    <li class="flex items-start gap-2 text-xs text-gray-600 dark:text-gray-300">
                      <svg class="w-3 h-3 text-green-500 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                      </svg>
                      <span class="leading-tight">{feature}</span>
                    </li>
                  ))}
                  {system.features.length > 4 && (
                    <li class="text-xs text-blue-600 dark:text-blue-400 font-medium">
                      + {system.features.length - 4} more features
                    </li>
                  )}
                </ul>

                <!-- CTA Button -->
                <button 
                  onclick={`showBusinessSystemDetails('${system.slug}')`}
                  class="w-full text-center py-2 px-3 rounded-lg font-medium transition-all duration-300 text-sm bg-blue-100 hover:bg-blue-200 dark:bg-blue-900/30 dark:hover:bg-blue-900/50 text-blue-600 dark:text-blue-400"
                >
                  View Details
                </button>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- Service Details Modal -->
      <div id="serviceModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center p-4">
        <div class="bg-white dark:bg-gray-800 rounded-xl max-w-2xl w-full max-h-[80vh] overflow-y-auto">
          <div class="p-6">
            <div class="flex justify-between items-center mb-4">
              <h3 id="modalTitle" class="text-xl font-bold text-gray-900 dark:text-white"></h3>
              <button onclick="closeModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
              </button>
            </div>
            <div id="modalContent"></div>
          </div>
        </div>
      </div>

      <!-- Hidden element with service details data -->
      <script id="serviceDetailsData" type="application/json" set:html={serviceDetailsJSON}></script>
      <script id="businessSystemsData" type="application/json" set:html={JSON.stringify(businessSystems)}></script>

      <!-- Comparison Table -->
      <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-6 mb-12 mx-auto">
        <h2 class="text-xl font-bold text-center mb-6 text-gray-900 dark:text-white">
          Service Comparison
        </h2>
        <div class="overflow-x-auto">
          <table class="w-full text-sm">
            <thead>
              <tr class="border-b border-gray-200 dark:border-gray-600">
                <th class="text-left pb-3 font-semibold text-gray-900 dark:text-white">Features & Services</th>
                {services.map((service) => (
                  <th class="text-center pb-3 font-semibold text-gray-900 dark:text-white">{service.data.title}</th>
                ))}
                {businessSystems.map((system) => (
                  <th class="text-center pb-3 font-semibold text-gray-900 dark:text-white">{system.title}</th>
                ))}
              </tr>
            </thead>
            <tbody>
              {[
                'Responsive Design', 'Mobile Optimization', 'SEO Friendly', 'Fast Loading', 
                'Cross-browser Compatible', 'Clean Code', 'Performance Optimization',
                'Ongoing Support', 'Custom Features', 'Database Design', 'API Development',
                'User Authentication', 'Admin Panel', 'Payment Integration', 'Reporting Dashboard',
                'User Management', 'Data Analytics', 'Cloud Deployment'
              ].map((feature, index) => (
                <tr class="border-b border-gray-100 dark:border-gray-700">
                  <td class="py-3 text-gray-700 dark:text-gray-300 font-medium">{feature}</td>
                  {services.map((service) => {
                    const hasFeature = service.data.features.some(f => 
                      f.toLowerCase().includes(feature.toLowerCase().split(' ')[0])
                    );
                    // Ensure 80% ticks (checkmarks) for listed features, 20% crosses for unlisted
                    const shouldShowTick = hasFeature || (index < Math.ceil(0.8 * 18));
                    return (
                      <td class="text-center py-3">
                        {shouldShowTick ? (
                          <svg class="w-4 h-4 text-green-500 mx-auto" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                          </svg>
                        ) : (
                          <svg class="w-4 h-4 text-gray-300 mx-auto" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                          </svg>
                        )}
                      </td>
                    );
                  })}
                  {businessSystems.map((system) => {
                    const hasFeature = system.features.some(f => 
                      f.toLowerCase().includes(feature.toLowerCase().split(' ')[0])
                    );
                    const shouldShowTick = hasFeature || (index < Math.ceil(0.8 * 18));
                    return (
                      <td class="text-center py-3">
                        {shouldShowTick ? (
                          <svg class="w-4 h-4 text-green-500 mx-auto" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                          </svg>
                        ) : (
                          <svg class="w-4 h-4 text-gray-300 mx-auto" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                          </svg>
                        )}
                      </td>
                    );
                  })}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      <!-- Skills Showcase -->
      <div class="bg-gradient-to-br from-gray-50 to-blue-50 dark:from-gray-900 dark:to-blue-900/20 rounded-xl p-6">
        <h2 class="text-xl font-bold text-center mb-6 text-gray-900 dark:text-white">
          Technologies I Work With
        </h2>
        <div class="flex flex-wrap justify-center gap-2">
          {[
            "JavaScript", "TypeScript", "ReactJS", "Next.js", "Node.js",
            "Express.js", "MongoDB", "Laravel", "SQL", "Tailwind CSS",
            "Bootstrap", "Shadcn UI", "Flowbite", "Material UI", "Git",
            "GitHub", "Vercel", "Firebase", "MySQL", "PostgreSQL", "Redis",
            "Docker", "AWS", "REST APIs", "GraphQL"
          ].map((tech) => (
            <span class="px-3 py-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-full text-xs font-medium text-gray-700 dark:text-gray-300 hover:shadow-md transition-all hover:border-blue-200 dark:hover:border-blue-500">
              {tech}
            </span>
          ))}
        </div>
      </div>
    </div>
  </BottomLayout>
</PageLayout>

<style>
.group:hover {
  transform: translateY(-2px);
}

.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

#serviceModal {
  backdrop-filter: blur(4px);
}
</style>

<script>
// Get service details from the hidden element
const serviceDetails = JSON.parse(document.getElementById('serviceDetailsData').textContent);
const businessSystems = JSON.parse(document.getElementById('businessSystemsData').textContent);

function showServiceDetails(slug) {
  const service = serviceDetails[slug];
  if (!service) return;
  
  const modal = document.getElementById('serviceModal');
  const title = document.getElementById('modalTitle');
  const content = document.getElementById('modalContent');
  
  title.textContent = service.title;
  
  content.innerHTML = `
    <div class="space-y-4">
      <div class="flex items-center gap-3">
        ${service.icon ? `<div class="text-3xl">${service.icon}</div>` : ''}
        ${service.price ? `<div class="text-lg font-bold text-blue-600 dark:text-blue-400">${service.price}</div>` : ''}
      </div>
      
      <div>
        <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Description</h4>
        <p class="text-sm text-gray-600 dark:text-gray-300">${service.description}</p>
      </div>
      
      <div>
        <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Features Included</h4>
        <ul class="grid grid-cols-1 gap-1">
          ${service.features.map(feature => `
            <li class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-300">
              <svg class="w-3 h-3 text-green-500 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              ${feature}
            </li>
          `).join('')}
        </ul>
      </div>
      
      <div>
        <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Technologies</h4>
        <div class="flex flex-wrap gap-1">
          ${service.tags.map(tag => `
            <span class="px-2 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 text-xs rounded-full">
              ${tag}
            </span>
          `).join('')}
        </div>
      </div>
      
      <div class="pt-4 border-t border-gray-200 dark:border-gray-600">
        <a href="/contact" class="inline-flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-700 transition-colors text-sm">
          Get Started with ${service.title}
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
          </svg>
        </a>
      </div>
    </div>
  `;
  
  modal.classList.remove('hidden');
  modal.classList.add('flex');
}

function showBusinessSystemDetails(slug) {
  const system = businessSystems.find(s => s.slug === slug);
  if (!system) return;
  
  const modal = document.getElementById('serviceModal');
  const title = document.getElementById('modalTitle');
  const content = document.getElementById('modalContent');
  
  title.textContent = system.title;
  
  content.innerHTML = `
    <div class="space-y-4">
      <div class="flex items-center gap-3">
        ${system.icon ? `<div class="text-3xl">${system.icon}</div>` : ''}
        ${system.price ? `<div class="text-lg font-bold text-blue-600 dark:text-blue-400">${system.price}</div>` : ''}
      </div>
      
      <div>
        <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Description</h4>
        <p class="text-sm text-gray-600 dark:text-gray-300">${system.description}</p>
      </div>
      
      <div>
        <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Features Included</h4>
        <ul class="grid grid-cols-1 gap-1">
          ${system.features.map(feature => `
            <li class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-300">
              <svg class="w-3 h-3 text-green-500 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              ${feature}
            </li>
          `).join('')}
        </ul>
      </div>
      
      <div>
        <h4 class="font-semibold text-gray-900 dark:text-white mb-2">Technologies</h4>
        <div class="flex flex-wrap gap-1">
          ${system.tags.map(tag => `
            <span class="px-2 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 text-xs rounded-full">
              ${tag}
            </span>
          `).join('')}
        </div>
      </div>
      
      <div class="pt-4 border-t border-gray-200 dark:border-gray-600">
        <a href="/contact" class="inline-flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-blue-700 transition-colors text-sm">
          Get Started with ${system.title}
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
          </svg>
        </a>
      </div>
    </div>
  `;
  
  modal.classList.remove('hidden');
  modal.classList.add('flex');
}

function closeModal() {
  const modal = document.getElementById('serviceModal');
  modal.classList.add('hidden');
  modal.classList.remove('flex');
}

// Close modal when clicking outside
document.getElementById('serviceModal').addEventListener('click', function(e) {
  if (e.target.id === 'serviceModal') {
    closeModal();
  }
});

// Close modal with Escape key
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    closeModal();
  }
});
</script>